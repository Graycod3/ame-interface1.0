import subprocess
from django.shortcuts import render
from .models import Post
from .models import ConfigInfo
from .forms import PostForm
from .forms import ConfigInfoForm
from django.shortcuts import redirect
from shutil import copyfile


# Create your views here.
def post_list(request):
    return render(request, 'blog/post_list.html', {})

#def post_detail(request):
 #   post = Post.objects.all()
  #  return render(request, 'blog/post_detail.html', {'post': post})

def post_L(request):
    post = Post.objects.all()
    return render(request, 'blog/post_L.html', {'post': post})

def post_list_two(request):
    #copyfile('/etc/network/interfaces', '/home/pi/Docker/NewP/NewProject/interfaces.bak')
    return render(request, 'blog/post_list_two.html',{})

def post_list_four(request):
    from .models import dhcp
    from .forms import dhcpForm
    dhcp.objects.all().delete()
    if request.method=="POST":
        dhcp=dhcpForm(request.POST)
        if dhcp.is_valid():
            dhcpForm=dhcp.save(commit=False)
            dhcpForm.save()
            subprocess.Popen(["python3", "/home/pi/Docker/NewP/NewProject/wifi_dhcp.py","-m"])
    else:
        dhcp=dhcpForm()
    return render(request, 'blog/post_edit_two.html',{'dhcp':dhcp})


def post_list_three(request):
    from .models import ConfigInfo
    ConfigInfo.objects.all().delete()
    if request.method =="POST":
       form =ConfigInfoForm(request.POST)
       if form.is_valid():
           ConfigInfo=form.save(commit=False)
           ConfigInfo.save()
 copyfile(['/home/pi/Docker/NewP/NewProject/interfaces.bak','/etc/network/interfaces'])           subprocess.Popen(["python3", "/home/pi/Docker/NewP/NewProject/tech_scripts_wifi.py","-m"])

           if(CheckConnection() == False):
               print("No net")
               copyfile(['/home/pi/Docker/NewP/NewProject/interfaces.bak','/etc/network/interfaces'])
               print("copied file bak")
               #form =ConfigInfoForm(request.POST)
               #if form.is_valid():
                   #ConfigInfo=form.save(commit=False)
                   #ConfigInfo.save()
                   #subprocess.Popen(["python3", "/home/pi/Docker/NewP/NewProject/tech_scripts_wifi.py","-m"])
    else:
        form=ConfigInfoForm()
    return render(request, 'blog/post_edit_wifi.html', {'form':form})


def CheckConnection():
    ps = subprocess.Popen(['iwconfig'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    try:
        output = subprocess.check_output(('grep', 'ESSID'), stdin=ps.stdout).decode()
        status = output.split('ESSID:')[1].split('/')[0]
        if status == 'off':
            print("Wi-Fi not connected")#do something about this, reload the page or sum
            return False
        else:
            print("Wi-Fi connected")
            return True
    except subprocess.CalledProcessError:
        # grep did not match any lines
        print("No wireless networks connected")
        return False



def post_new(request):
    Post.objects.all().delete()
    if request.method == "POST":
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.save()
           # return redirect('post_detail')
            subprocess.Popen(["python3","/home/pi/Docker/NewP/NewProject/tech_scripts_eth.py","-m"])
    else:
        form = PostForm()
    return render(request, 'blog/post_edit.html', {'form': form})


def post_new_dhcp():
    subprocess.Popen(["python3","/home/pi/Docker/NewP/NewProject/tech_scripts_dhcp_eth.py","-m"])





